{"version":3,"sources":["Components/Searchbar/SearchBar.jsx","service/api.js","utils/scroll.js","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGalleryList/ImageGalleryList.jsx","Components/Button/Button.jsx","Components/Modal/Modal.jsx","Components/Notices/Notices.jsx","Components/ImageGallery/ImageGallery.jsx","App.js","index.js"],"names":["SearchBar","state","searchQuery","handleChange","e","setState","currentTarget","value","toLowerCase","handleSubmit","preventDefault","trim","toast","error","console","log","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","API_KEY","BASE_URL","fetchImages","page","perPage","url","fetch","then","response","ok","json","Promise","reject","Error","images","hits","scrollContent","window","scrollTo","top","document","documentElement","scrollHeight","behavior","ImageGalleryItem","webformatURL","largeImageURL","tags","onImageClick","onClick","src","alt","ImageGalleryList","map","image","id","Button","name","propType","PropTypes","func","isRequired","modalRoot","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","addEventListener","removeEventListener","createPortal","children","ShearchMessage","style","color","textAlign","NothingFoundMessage","ImageGallery","loadMore","status","showModal","imageAlt","onLoadMore","toggleModal","dataSrc","dataset","prevProps","prevState","prevSearchQuery","nextSearchQuery","prevPage","nextPage","catch","height","width","message","length","maxHeight","background","App","handleFormSubmit","autoClose","theme","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f06dc9b6.chunk.js","sourcesContent":["import { Component } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\n\nclass SearchBar extends Component {\n  state = {\n    searchQuery: '',\n  };\n\n  handleChange = e => {\n    // console.log(e.currentTarget.value);\n    this.setState({ searchQuery: e.currentTarget.value.toLowerCase() });\n    // console.log(this.state);\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    if (this.state.searchQuery.trim() === '') {\n      return toast.error('Введите Ваш Запрос');\n    }\n    console.log(this.props);\n    console.log(this.state);\n    this.props.onSubmit(this.state.searchQuery);\n    this.setState({ searchQuery: '' });\n  };\n  render() {\n    const { handleSubmit, handleChange } = this;\n\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={handleSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={handleChange}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default SearchBar;\n","const API_KEY = `23049135-63d939595882c9f020474dd76`;\r\nconst BASE_URL = `https://pixabay.com/api/`;\r\n\r\nconst fetchImages = (searchQuery, page = 1, perPage = 12) => {\r\n  const url = `${BASE_URL}?q=${searchQuery}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${perPage}`;\r\n\r\n  return fetch(url)\r\n    .then(response => {\r\n      // console.log(searchQuery);\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject(\r\n        new Error(\r\n          `no results were found for your search ${this.state.searchQuery}`,\r\n        ),\r\n      ); // если 404\r\n    })\r\n    .then(images => images.hits);\r\n};\r\nexport default fetchImages;\r\n","const scrollContent = () => {\r\n  window.scrollTo({\r\n    top: document.documentElement.scrollHeight,\r\n    behavior: 'smooth',\r\n  });\r\n};\r\n\r\nexport default scrollContent;\r\n","import PropTypes from 'prop-types';\n\nexport default function ImageGalleryItem({\n  webformatURL,\n  largeImageURL,\n  tags,\n  onImageClick,\n}) {\n  return (\n    <>\n      <img\n        onClick={e => {\n          onImageClick(e);\n        }}\n        src={webformatURL}\n        data-src={largeImageURL}\n        alt={tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </>\n  );\n}\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string.isRequired,\n  largeImageURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  onImageClick: PropTypes.func.isRequired,\n};\n","import ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport PropTypes from 'prop-types';\r\nexport default function ImageGalleryList({ images, onImageClick }) {\r\n  // console.log(images, onImageClick);\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {images.map(image => (\r\n        <li className=\"ImageGalleryItem\" key={image.id}>\r\n          <ImageGalleryItem {...image} onImageClick={onImageClick} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGalleryList.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      webformatURL: PropTypes.string.isRequired,\r\n      largeImageURL: PropTypes.string.isRequired,\r\n      tags: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ),\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\n\nexport default function Button({ onClick }) {\n  return (\n    <button type=\"button\" name=\"Load more\" className=\"Button\" onClick={onClick}>\n      <span className=\"lable\">Load more</span>\n    </button>\n  );\n}\n\nButton.propType = {\n  onClick: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    // console.log('ModalDidMount');\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    // console.log('ModalUnMount');\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      this.props.onClose();\n    }\n  };\n\n  render() {\n    const { handleBackdropClick } = this;\n    return createPortal(\n      <div className=\"Overlay\" onClick={handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalRoot,\n    );\n  }\n}\n\nexport default Modal;\n","export function ShearchMessage() {\r\n  return (\r\n    <h1 style={{ color: '#3f51b5', textAlign: 'center' }}>\r\n      Enter Your Request\r\n    </h1>\r\n  );\r\n}\r\nexport function NothingFoundMessage() {\r\n  return (\r\n    <h2 style={{ color: 'tomato', textAlign: 'center' }}>\r\n      No image has been found. Please enter a more specific query!\r\n    </h2>\r\n  );\r\n}\r\n","import { Component } from 'react';\nimport Loader from 'react-loader-spinner';\nimport fetchImages from '../../service/api';\nimport scrollContent from '../../utils/scroll';\n\nimport ImageGalleryList from '../ImageGalleryList/ImageGalleryList';\nimport Button from '../Button/Button';\nimport Modal from '../Modal/Modal';\nimport { ShearchMessage, NothingFoundMessage } from '../Notices/Notices';\n\nclass ImageGallery extends Component {\n  state = {\n    images: [],\n    page: 1,\n    loadMore: false,\n    error: null,\n    status: 'idle',\n    showModal: false,\n    largeImageURL: '',\n    imageAlt: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log(this.props);\n    const prevSearchQuery = prevProps.searchQuery;\n    const nextSearchQuery = this.props.searchQuery;\n    const prevPage = prevState.page;\n    const nextPage = this.state.page;\n\n    if (prevSearchQuery !== nextSearchQuery) {\n      this.setState({ status: 'pending' });\n\n      fetchImages(nextSearchQuery, nextPage)\n        .then(images => {\n          this.setState({\n            images: [...images],\n            loadMore: true,\n            status: 'resolved',\n          });\n        })\n        .catch(error => this.setState({ error, status: 'rejected' })); //== если не 404\n    }\n    if (prevPage !== nextPage) {\n      fetchImages(nextSearchQuery, nextPage)\n        .then(images => {\n          this.setState({\n            images: [...prevState.images, ...images],\n            loadMore: true,\n            status: 'resolved',\n          });\n          scrollContent();\n        })\n        .catch(error => this.setState({ error, status: 'rejected' })); //== если не 404\n    }\n  }\n\n  onLoadMore = () => {\n    const { page } = this.state;\n    this.setState({ page: page + 1 });\n  };\n\n  toggleModal = () => {\n    this.setState(({ showModal }) => ({ showModal: !showModal }));\n  };\n\n  onImageClick = e => {\n    const dataSrc = e.target.dataset.src;\n    const alt = e.target.alt;\n    this.setState({\n      largeImageURL: dataSrc,\n      imageAlt: alt,\n      showModal: true,\n    });\n  };\n\n  render() {\n    const {\n      state: {\n        status,\n        error,\n        images,\n        loadMore,\n        showModal,\n        largeImageURL,\n        imageAlt,\n      },\n      onImageClick,\n      onLoadMore,\n      toggleModal,\n    } = this;\n\n    if (status === 'idle') return <ShearchMessage />;\n\n    if (status === 'pending')\n      return <Loader type=\"ThreeDots\" color=\"#3f51b5\" height={80} width={80} />;\n\n    if (status === 'rejected') return <h1>{error.message}</h1>;\n\n    if (status === 'resolved' && images.length < 1)\n      return <NothingFoundMessage />;\n\n    if (status === 'resolved')\n      return (\n        <div>\n          <ImageGalleryList images={images} onImageClick={onImageClick} />\n          {loadMore && <Button onClick={onLoadMore} />}\n\n          {showModal && (\n            <Modal onClose={toggleModal}>\n              <img\n                src={largeImageURL}\n                alt={imageAlt}\n                style={{ maxHeight: '80vh', background: 'white' }}\n              />\n            </Modal>\n          )}\n        </div>\n      );\n  }\n}\n\nexport default ImageGallery;\n","import React, { Component } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport SearchBar from './Components/Searchbar/SearchBar.jsx';\nimport ImageGallery from './Components/ImageGallery/ImageGallery.jsx';\n\nclass App extends Component {\n  state = {\n    searchQuery: '',\n    page: 1,\n  };\n\n  handleFormSubmit = searchQuery => {\n    this.setState({ searchQuery: searchQuery, page: 1 });\n  };\n\n  render() {\n    const {\n      handleFormSubmit,\n      state: { searchQuery, page },\n    } = this;\n\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={handleFormSubmit} />\n\n        <ImageGallery searchQuery={searchQuery} page={page} />\n\n        <ToastContainer autoClose={3000} theme={'colored'} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}